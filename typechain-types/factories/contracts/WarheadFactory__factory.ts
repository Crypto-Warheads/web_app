/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  WarheadFactory,
  WarheadFactoryInterface,
} from "../../contracts/WarheadFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_trustedForwarder",
        type: "address",
      },
      {
        internalType: "contract WarheadNft",
        name: "_warheadNft",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "warheadId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "claimer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "claimedAt",
        type: "uint256",
      },
    ],
    name: "WarheadClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "warheadId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dropper",
        type: "address",
      },
    ],
    name: "WarheadCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "warheadId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "dropper",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "targetReceiver",
        type: "address",
      },
    ],
    name: "WarheadCreatedWithReceiver",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "warheadId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "lat",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "long",
            type: "int256",
          },
        ],
        indexed: false,
        internalType: "struct WarheadFactory.Coord",
        name: "target",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "impactTime",
        type: "uint256",
      },
    ],
    name: "WarheadDropped",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "lat",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "long",
            type: "int256",
          },
        ],
        internalType: "struct WarheadFactory.Coord",
        name: "location",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "warheadId",
        type: "uint256",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "targetReceiver",
        type: "address",
      },
    ],
    name: "createWarhead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "warheadId",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "lat",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "long",
            type: "int256",
          },
        ],
        internalType: "struct WarheadFactory.Coord",
        name: "coord",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "impactTime",
        type: "uint256",
      },
    ],
    name: "dropWarhead",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "warheadId",
        type: "uint256",
      },
    ],
    name: "fetchWarheadInfo",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "dropper",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isLaunched",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "int256",
                name: "lat",
                type: "int256",
              },
              {
                internalType: "int256",
                name: "long",
                type: "int256",
              },
            ],
            internalType: "struct WarheadFactory.Coord",
            name: "target",
            type: "tuple",
          },
          {
            internalType: "uint256",
            name: "impactTime",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "claimer",
            type: "address",
          },
          {
            internalType: "bool",
            name: "isClaimed",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "claimedAt",
            type: "uint256",
          },
          {
            internalType: "address",
            name: "targetReceiver",
            type: "address",
          },
        ],
        internalType: "struct WarheadFactory.WarheadObject",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC721Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "trustedForwarder",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "versionRecipient",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [],
    name: "warheadNft",
    outputs: [
      {
        internalType: "contract WarheadNft",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type WarheadFactoryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: WarheadFactoryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class WarheadFactory__factory extends ContractFactory {
  constructor(...args: WarheadFactoryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _trustedForwarder: AddressLike,
    _warheadNft: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _trustedForwarder,
      _warheadNft,
      overrides || {}
    );
  }
  override deploy(
    _trustedForwarder: AddressLike,
    _warheadNft: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _trustedForwarder,
      _warheadNft,
      overrides || {}
    ) as Promise<
      WarheadFactory & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): WarheadFactory__factory {
    return super.connect(runner) as WarheadFactory__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): WarheadFactoryInterface {
    return new Interface(_abi) as WarheadFactoryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): WarheadFactory {
    return new Contract(address, _abi, runner) as unknown as WarheadFactory;
  }
}
