/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { NFTWallet, NFTWalletInterface } from "../../contracts/NFTWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
      {
        internalType: "contract ERC6551Registry",
        name: "_registry",
        type: "address",
      },
      {
        internalType: "address",
        name: "_erc6551AccountImplementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721IncorrectOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721InsufficientApproval",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC721InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "ERC721InvalidOperator",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "ERC721InvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC721InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC721InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ERC721NonexistentToken",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "erc6551AccountImplementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getAccountAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "registry",
    outputs: [
      {
        internalType: "contract ERC6551Registry",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "safeMint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162002c9938038062002c99833981810160405281019062000037919062000351565b826040518060400160405280600981526020017f4e465457616c6c657400000000000000000000000000000000000000000000008152506040518060400160405280600281526020017f4e570000000000000000000000000000000000000000000000000000000000008152508160009081620000b5919062000627565b508060019081620000c7919062000627565b505050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200013f5760006040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016200013691906200071f565b60405180910390fd5b6200015081620001dc60201b60201c565b5081600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050506200073c565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620002d482620002a7565b9050919050565b620002e681620002c7565b8114620002f257600080fd5b50565b6000815190506200030681620002db565b92915050565b60006200031982620002c7565b9050919050565b6200032b816200030c565b81146200033757600080fd5b50565b6000815190506200034b8162000320565b92915050565b6000806000606084860312156200036d576200036c620002a2565b5b60006200037d86828701620002f5565b935050602062000390868287016200033a565b9250506040620003a386828701620002f5565b9150509250925092565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200042f57607f821691505b602082108103620004455762000444620003e7565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302620004af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000470565b620004bb868362000470565b95508019841693508086168417925050509392505050565b6000819050919050565b6000819050919050565b60006200050862000502620004fc84620004d3565b620004dd565b620004d3565b9050919050565b6000819050919050565b6200052483620004e7565b6200053c62000533826200050f565b8484546200047d565b825550505050565b600090565b6200055362000544565b6200056081848462000519565b505050565b5b8181101562000588576200057c60008262000549565b60018101905062000566565b5050565b601f821115620005d757620005a1816200044b565b620005ac8462000460565b81016020851015620005bc578190505b620005d4620005cb8562000460565b83018262000565565b50505b505050565b600082821c905092915050565b6000620005fc60001984600802620005dc565b1980831691505092915050565b6000620006178383620005e9565b9150826002028217905092915050565b6200063282620003ad565b67ffffffffffffffff8111156200064e576200064d620003b8565b5b6200065a825462000416565b620006678282856200058c565b600060209050601f8311600181146200069f57600084156200068a578287015190505b62000696858262000609565b86555062000706565b601f198416620006af866200044b565b60005b82811015620006d957848901518255600182019150602085019450602081019050620006b2565b86831015620006f95784890151620006f5601f891682620005e9565b8355505b6001600288020188555050505b505050505050565b6200071981620002c7565b82525050565b60006020820190506200073660008301846200070e565b92915050565b61254d806200074c6000396000f3fe608060405234801561001057600080fd5b506004361061012c5760003560e01c80637b103999116100ad578063b88d4fde11610071578063b88d4fde1461031d578063c87b56dd14610339578063db4cf8e614610369578063e985e9c514610399578063f2fde38b146103c95761012c565b80637b103999146102895780638da5cb5b146102a7578063918372de146102c557806395d89b41146102e3578063a22cb465146103015761012c565b806340d097c3116100f457806340d097c3146101e757806342842e0e146102035780636352211e1461021f57806370a082311461024f578063715018a61461027f5761012c565b806301ffc9a71461013157806306fdde0314610161578063081812fc1461017f578063095ea7b3146101af57806323b872dd146101cb575b600080fd5b61014b60048036038101906101469190611b4a565b6103e5565b6040516101589190611b92565b60405180910390f35b6101696104c7565b6040516101769190611c3d565b60405180910390f35b61019960048036038101906101949190611c95565b610559565b6040516101a69190611d03565b60405180910390f35b6101c960048036038101906101c49190611d4a565b610575565b005b6101e560048036038101906101e09190611d8a565b61058b565b005b61020160048036038101906101fc9190611ddd565b61068d565b005b61021d60048036038101906102189190611d8a565b610788565b005b61023960048036038101906102349190611c95565b6107a8565b6040516102469190611d03565b60405180910390f35b61026960048036038101906102649190611ddd565b6107ba565b6040516102769190611e19565b60405180910390f35b610287610874565b005b610291610888565b60405161029e9190611e93565b60405180910390f35b6102af6108ae565b6040516102bc9190611d03565b60405180910390f35b6102cd6108d8565b6040516102da9190611d03565b60405180910390f35b6102eb6108fe565b6040516102f89190611c3d565b60405180910390f35b61031b60048036038101906103169190611eda565b610990565b005b6103376004803603810190610332919061204f565b6109a6565b005b610353600480360381019061034e9190611c95565b6109c3565b6040516103609190611c3d565b60405180910390f35b610383600480360381019061037e9190611c95565b610a2c565b6040516103909190611d03565b60405180910390f35b6103b360048036038101906103ae91906120d2565b610afc565b6040516103c09190611b92565b60405180910390f35b6103e360048036038101906103de9190611ddd565b610b90565b005b60007f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191614806104b057507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b806104c057506104bf82610c16565b5b9050919050565b6060600080546104d690612141565b80601f016020809104026020016040519081016040528092919081815260200182805461050290612141565b801561054f5780601f106105245761010080835404028352916020019161054f565b820191906000526020600020905b81548152906001019060200180831161053257829003601f168201915b5050505050905090565b600061056482610c80565b5061056e82610d08565b9050919050565b6105878282610582610d45565b610d4d565b5050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036105fd5760006040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016105f49190611d03565b60405180910390fd5b6000610611838361060c610d45565b610d5f565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610687578382826040517f64283d7b00000000000000000000000000000000000000000000000000000000815260040161067e93929190612172565b60405180910390fd5b50505050565b610695610f79565b6000600760008154809291906106aa906121d8565b9190505590506106ba8282611000565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663da7323b3600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1646308560006040518663ffffffff1660e01b8152600401610740959493929190612292565b6020604051808303816000875af115801561075f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610783919061230d565b505050565b6107a3838383604051806020016040528060008152506109a6565b505050565b60006107b382610c80565b9050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361082d5760006040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016108249190611d03565b60405180910390fd5b600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b61087c610f79565b610886600061101e565b565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60606001805461090d90612141565b80601f016020809104026020016040519081016040528092919081815260200182805461093990612141565b80156109865780601f1061095b57610100808354040283529160200191610986565b820191906000526020600020905b81548152906001019060200180831161096957829003601f168201915b5050505050905090565b6109a261099b610d45565b83836110e4565b5050565b6109b184848461058b565b6109bd84848484611253565b50505050565b60606109ce82610c80565b5060006109d961140a565b905060008151116109f95760405180602001604052806000815250610a24565b80610a0384611421565b604051602001610a14929190612376565b6040516020818303038152906040525b915050919050565b6000600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16635e9bc536600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1646308660006040518663ffffffff1660e01b8152600401610ab495949392919061239a565b602060405180830381865afa158015610ad1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af5919061230d565b9050919050565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b610b98610f79565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610c0a5760006040517f1e4fbdf7000000000000000000000000000000000000000000000000000000008152600401610c019190611d03565b60405180910390fd5b610c138161101e565b50565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b600080610c8c836114ef565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610cff57826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610cf69190611e19565b60405180910390fd5b80915050919050565b60006004600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600033905090565b610d5a838383600161152c565b505050565b600080610d6b846114ef565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610dad57610dac8184866116f1565b5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610e3e57610def60008560008061152c565b6001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825403925050819055505b600073ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610ec1576001600360008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055505b846002600086815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b610f81610d45565b73ffffffffffffffffffffffffffffffffffffffff16610f9f6108ae565b73ffffffffffffffffffffffffffffffffffffffff1614610ffe57610fc2610d45565b6040517f118cdaa7000000000000000000000000000000000000000000000000000000008152600401610ff59190611d03565b60405180910390fd5b565b61101a8282604051806020016040528060008152506117b5565b5050565b6000600660009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600660006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361115557816040517f5b08ba1800000000000000000000000000000000000000000000000000000000815260040161114c9190611d03565b60405180910390fd5b80600560008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516112469190611b92565b60405180910390a3505050565b60008373ffffffffffffffffffffffffffffffffffffffff163b1115611404578273ffffffffffffffffffffffffffffffffffffffff1663150b7a02611297610d45565b8685856040518563ffffffff1660e01b81526004016112b99493929190612431565b6020604051808303816000875af19250505080156112f557506040513d601f19601f820116820180604052508101906112f29190612492565b60015b611379573d8060008114611325576040519150601f19603f3d011682016040523d82523d6000602084013e61132a565b606091505b50600081510361137157836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113689190611d03565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461140257836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113f99190611d03565b60405180910390fd5b505b50505050565b606060405180602001604052806000815250905090565b606060006001611430846117d1565b01905060008167ffffffffffffffff81111561144f5761144e611f24565b5b6040519080825280601f01601f1916602001820160405280156114815781602001600182028036833780820191505090505b509050600082602001820190505b6001156114e4578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a85816114d8576114d76124bf565b5b0494506000850361148f575b819350505050919050565b60006002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806115655750600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b1561169957600061157584610c80565b9050600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156115e057508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b80156115f357506115f18184610afc565b155b1561163557826040517fa9fbf51f00000000000000000000000000000000000000000000000000000000815260040161162c9190611d03565b60405180910390fd5b811561169757838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b836004600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b6116fc838383611924565b6117b057600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361177157806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016117689190611e19565b60405180910390fd5b81816040517f177e802f0000000000000000000000000000000000000000000000000000000081526004016117a79291906124ee565b60405180910390fd5b505050565b6117bf83836119e5565b6117cc6000848484611253565b505050565b600080600090507a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000831061182f577a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008381611825576118246124bf565b5b0492506040810190505b6d04ee2d6d415b85acef8100000000831061186c576d04ee2d6d415b85acef81000000008381611862576118616124bf565b5b0492506020810190505b662386f26fc10000831061189b57662386f26fc100008381611891576118906124bf565b5b0492506010810190505b6305f5e10083106118c4576305f5e10083816118ba576118b96124bf565b5b0492506008810190505b61271083106118e95761271083816118df576118de6124bf565b5b0492506004810190505b6064831061190c5760648381611902576119016124bf565b5b0492506002810190505b600a831061191b576001810190505b80915050919050565b60008073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141580156119dc57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061199d575061199c8484610afc565b5b806119db57508273ffffffffffffffffffffffffffffffffffffffff166119c383610d08565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611a575760006040517f64a0ae92000000000000000000000000000000000000000000000000000000008152600401611a4e9190611d03565b60405180910390fd5b6000611a6583836000610d5f565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611ad95760006040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611ad09190611d03565b60405180910390fd5b505050565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611b2781611af2565b8114611b3257600080fd5b50565b600081359050611b4481611b1e565b92915050565b600060208284031215611b6057611b5f611ae8565b5b6000611b6e84828501611b35565b91505092915050565b60008115159050919050565b611b8c81611b77565b82525050565b6000602082019050611ba76000830184611b83565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015611be7578082015181840152602081019050611bcc565b60008484015250505050565b6000601f19601f8301169050919050565b6000611c0f82611bad565b611c198185611bb8565b9350611c29818560208601611bc9565b611c3281611bf3565b840191505092915050565b60006020820190508181036000830152611c578184611c04565b905092915050565b6000819050919050565b611c7281611c5f565b8114611c7d57600080fd5b50565b600081359050611c8f81611c69565b92915050565b600060208284031215611cab57611caa611ae8565b5b6000611cb984828501611c80565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000611ced82611cc2565b9050919050565b611cfd81611ce2565b82525050565b6000602082019050611d186000830184611cf4565b92915050565b611d2781611ce2565b8114611d3257600080fd5b50565b600081359050611d4481611d1e565b92915050565b60008060408385031215611d6157611d60611ae8565b5b6000611d6f85828601611d35565b9250506020611d8085828601611c80565b9150509250929050565b600080600060608486031215611da357611da2611ae8565b5b6000611db186828701611d35565b9350506020611dc286828701611d35565b9250506040611dd386828701611c80565b9150509250925092565b600060208284031215611df357611df2611ae8565b5b6000611e0184828501611d35565b91505092915050565b611e1381611c5f565b82525050565b6000602082019050611e2e6000830184611e0a565b92915050565b6000819050919050565b6000611e59611e54611e4f84611cc2565b611e34565b611cc2565b9050919050565b6000611e6b82611e3e565b9050919050565b6000611e7d82611e60565b9050919050565b611e8d81611e72565b82525050565b6000602082019050611ea86000830184611e84565b92915050565b611eb781611b77565b8114611ec257600080fd5b50565b600081359050611ed481611eae565b92915050565b60008060408385031215611ef157611ef0611ae8565b5b6000611eff85828601611d35565b9250506020611f1085828601611ec5565b9150509250929050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611f5c82611bf3565b810181811067ffffffffffffffff82111715611f7b57611f7a611f24565b5b80604052505050565b6000611f8e611ade565b9050611f9a8282611f53565b919050565b600067ffffffffffffffff821115611fba57611fb9611f24565b5b611fc382611bf3565b9050602081019050919050565b82818337600083830152505050565b6000611ff2611fed84611f9f565b611f84565b90508281526020810184848401111561200e5761200d611f1f565b5b612019848285611fd0565b509392505050565b600082601f83011261203657612035611f1a565b5b8135612046848260208601611fdf565b91505092915050565b6000806000806080858703121561206957612068611ae8565b5b600061207787828801611d35565b945050602061208887828801611d35565b935050604061209987828801611c80565b925050606085013567ffffffffffffffff8111156120ba576120b9611aed565b5b6120c687828801612021565b91505092959194509250565b600080604083850312156120e9576120e8611ae8565b5b60006120f785828601611d35565b925050602061210885828601611d35565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061215957607f821691505b60208210810361216c5761216b612112565b5b50919050565b60006060820190506121876000830186611cf4565b6121946020830185611e0a565b6121a16040830184611cf4565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006121e382611c5f565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612215576122146121a9565b5b600182019050919050565b6000819050919050565b600061224561224061223b84612220565b611e34565b611c5f565b9050919050565b6122558161222a565b82525050565b600082825260208201905092915050565b50565b600061227c60008361225b565b91506122878261226c565b600082019050919050565b600060c0820190506122a76000830188611cf4565b6122b46020830187611e0a565b6122c16040830186611cf4565b6122ce6060830185611e0a565b6122db608083018461224c565b81810360a08301526122ec8161226f565b90509695505050505050565b60008151905061230781611d1e565b92915050565b60006020828403121561232357612322611ae8565b5b6000612331848285016122f8565b91505092915050565b600081905092915050565b600061235082611bad565b61235a818561233a565b935061236a818560208601611bc9565b80840191505092915050565b60006123828285612345565b915061238e8284612345565b91508190509392505050565b600060a0820190506123af6000830188611cf4565b6123bc6020830187611e0a565b6123c96040830186611cf4565b6123d66060830185611e0a565b6123e3608083018461224c565b9695505050505050565b600081519050919050565b6000612403826123ed565b61240d818561225b565b935061241d818560208601611bc9565b61242681611bf3565b840191505092915050565b60006080820190506124466000830187611cf4565b6124536020830186611cf4565b6124606040830185611e0a565b818103606083015261247281846123f8565b905095945050505050565b60008151905061248c81611b1e565b92915050565b6000602082840312156124a8576124a7611ae8565b5b60006124b68482850161247d565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006040820190506125036000830185611cf4565b6125106020830184611e0a565b939250505056fea264697066735822122097a77f878e93bfc84e3c905271acafc604c69be5c86b73903f89b3044729598264736f6c63430008180033";

type NFTWalletConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: NFTWalletConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class NFTWallet__factory extends ContractFactory {
  constructor(...args: NFTWalletConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    _registry: AddressLike,
    _erc6551AccountImplementation: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      initialOwner,
      _registry,
      _erc6551AccountImplementation,
      overrides || {}
    );
  }
  override deploy(
    initialOwner: AddressLike,
    _registry: AddressLike,
    _erc6551AccountImplementation: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      initialOwner,
      _registry,
      _erc6551AccountImplementation,
      overrides || {}
    ) as Promise<
      NFTWallet & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): NFTWallet__factory {
    return super.connect(runner) as NFTWallet__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): NFTWalletInterface {
    return new Interface(_abi) as NFTWalletInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): NFTWallet {
    return new Contract(address, _abi, runner) as unknown as NFTWallet;
  }
}
