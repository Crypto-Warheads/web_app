/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../common";
import type {
  ERC6551Registry,
  ERC6551RegistryInterface,
} from "../../contracts/ERC6551Registry";

const _abi = [
  {
    inputs: [],
    name: "Create2EmptyBytecode",
    type: "error",
  },
  {
    inputs: [],
    name: "Create2FailedDeployment",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "Create2InsufficientBalance",
    type: "error",
  },
  {
    inputs: [],
    name: "InitializationFailed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "AccountCreated",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
    ],
    name: "account",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "tokenContract",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "salt",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "initData",
        type: "bytes",
      },
    ],
    name: "createAccount",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610918806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80635e9bc5361461003b578063da7323b31461006b575b600080fd5b61005560048036038101906100509190610464565b61009b565b60405161006291906104ee565b60405180910390f35b6100856004803603810190610080919061056e565b6100cd565b60405161009291906104ee565b60405180910390f35b6000806100ab8787878787610236565b8051906020012090506100c18360001b8261028a565b91505095945050505050565b6000806100dd8989898989610236565b905060006100f58660001b838051906020012061028a565b905060008173ffffffffffffffffffffffffffffffffffffffff163b1461012057809250505061022b565b61012f60008760001b8461029f565b9050600085859050146101e45760008173ffffffffffffffffffffffffffffffffffffffff16868660405161016592919061065c565b6000604051808303816000865af19150503d80600081146101a2576040519150601f19603f3d011682016040523d82523d6000602084013e6101a7565b606091505b50509050806101e2576040517f19b991a800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505b7f07fba7bba1191da7ee1155dcfa0030701c9c9a9cc34a93b991fc6fd0c9268d8f818b8b8b8b8b60405161021d96959493929190610684565b60405180910390a180925050505b979650505050505050565b6060858286868660405160200161025094939291906106e5565b60405160208183030381529060405260405160200161027092919061087b565b604051602081830303815290604052905095945050505050565b600061029783833061039b565b905092915050565b6000834710156102e85747846040517fe4bbecac0000000000000000000000000000000000000000000000000000000081526004016102df9291906108b9565b60405180910390fd5b6000825103610323576040517f4ca249dc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8282516020840186f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610394576040517f741752c200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b9392505050565b6000604051836040820152846020820152828152600b810160ff815360558120925050509392505050565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006103fb826103d0565b9050919050565b61040b816103f0565b811461041657600080fd5b50565b60008135905061042881610402565b92915050565b6000819050919050565b6104418161042e565b811461044c57600080fd5b50565b60008135905061045e81610438565b92915050565b600080600080600060a086880312156104805761047f6103c6565b5b600061048e88828901610419565b955050602061049f8882890161044f565b94505060406104b088828901610419565b93505060606104c18882890161044f565b92505060806104d28882890161044f565b9150509295509295909350565b6104e8816103f0565b82525050565b600060208201905061050360008301846104df565b92915050565b600080fd5b600080fd5b600080fd5b60008083601f84011261052e5761052d610509565b5b8235905067ffffffffffffffff81111561054b5761054a61050e565b5b60208301915083600182028301111561056757610566610513565b5b9250929050565b600080600080600080600060c0888a03121561058d5761058c6103c6565b5b600061059b8a828b01610419565b97505060206105ac8a828b0161044f565b96505060406105bd8a828b01610419565b95505060606105ce8a828b0161044f565b94505060806105df8a828b0161044f565b93505060a088013567ffffffffffffffff811115610600576105ff6103cb565b5b61060c8a828b01610518565b925092505092959891949750929550565b600081905092915050565b82818337600083830152505050565b6000610643838561061d565b9350610650838584610628565b82840190509392505050565b6000610669828486610637565b91508190509392505050565b61067e8161042e565b82525050565b600060c08201905061069960008301896104df565b6106a660208301886104df565b6106b36040830187610675565b6106c060608301866104df565b6106cd6080830185610675565b6106da60a0830184610675565b979650505050505050565b60006080820190506106fa6000830187610675565b6107076020830186610675565b61071460408301856104df565b6107216060830184610675565b95945050505050565b600081905092915050565b7f3d60ad80600a3d3981f3363d3d373d3d3d363d73000000000000000000000000600082015250565b600061076b60148361072a565b915061077682610735565b601482019050919050565b60008160601b9050919050565b600061079982610781565b9050919050565b60006107ab8261078e565b9050919050565b6107c36107be826103f0565b6107a0565b82525050565b7f5af43d82803e903d91602b57fd5bf30000000000000000000000000000000000600082015250565b60006107ff600f8361072a565b915061080a826107c9565b600f82019050919050565b600081519050919050565b60005b8381101561083e578082015181840152602081019050610823565b60008484015250505050565b600061085582610815565b61085f818561061d565b935061086f818560208601610820565b80840191505092915050565b60006108868261075e565b915061089282856107b2565b6014820191506108a1826107f2565b91506108ad828461084a565b91508190509392505050565b60006040820190506108ce6000830185610675565b6108db6020830184610675565b939250505056fea26469706673582212206adf81ca358450dadeffa8d51a959bcb4c730f3c826cd3536d46b114fff3c89864736f6c63430008180033";

type ERC6551RegistryConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC6551RegistryConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC6551Registry__factory extends ContractFactory {
  constructor(...args: ERC6551RegistryConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      ERC6551Registry & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC6551Registry__factory {
    return super.connect(runner) as ERC6551Registry__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC6551RegistryInterface {
    return new Interface(_abi) as ERC6551RegistryInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): ERC6551Registry {
    return new Contract(address, _abi, runner) as unknown as ERC6551Registry;
  }
}
